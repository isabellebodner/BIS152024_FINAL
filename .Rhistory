mutate(age_group = factor(age_group, levels = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"))) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)+
labs(title = "Total Homelessness by Age Group",
x= "Age Group",
y= "Total Count")+
scale_y_continuous(labels = scales::comma)
age_grouped %>%
filter(LOCATION!="Yolo") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)
age_grouped %>%
filter(LOCATION=="Yolo") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)
age_grouped %>%
filter(LOCATION=="Yolo County CoC")
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT))
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
na.omit()
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
na.omit() %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT)) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col()
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
na.omit() %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col()
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col()
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col()
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)+
coord_flip()+
labs(title = "Total Homeless Individuals in Yolo County Coc-Age Group",
x= "Age Group",
y= "")
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)+
coord_flip()+
labs(title = "Total Homeless Individuals in Yolo County Coc-Age Group",
x= "Age Group",
y= "Total Individuals that Received Care")
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
mutate(age_group = factor(age_group, levels = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"))) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)+
coord_flip()+
labs(title = "Total Homeless Individuals in Yolo County Coc-Age Group",
x= "Age Group",
y= "Total Individuals that Received Care")
app <- age_grouped %>%
filter(LOCATION!="California")
app <- age_grouped %>%
filter(LOCATION!="California") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT))
View(app)
app <- age_grouped %>%
filter(LOCATION!="California") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
filter(EXPERIENCING_HOMELESSNESS_CNT!="NA")
is.na(app$EXPERIENCING_HOMELESSNESS_CNT)
anyNA(app$EXPERIENCING_HOMELESSNESS_CNT)
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
mutate(age_group = factor(age_group, levels = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"))) %>%
ggplot(aes(x=age_group,y=total_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)+
coord_flip()+
labs(title = "Total Homeless Individuals in Yolo County Coc-Age Group",
x= "Age Group",
y= "Total Individuals that Received Care")
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
mutate(age_group = factor(age_group, levels = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"))) %>%
ggplot(aes(x=age_group,y=mean_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)+
coord_flip()+
labs(title = "Total Homeless Individuals in Yolo County Coc-Age Group",
x= "Age Group",
y= "Total Individuals that Received Care")
age_grouped %>%
filter(LOCATION=="Yolo County CoC") %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = T)) %>%
mutate(age_group = factor(age_group, levels = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"))) %>%
ggplot(aes(x=age_group,y=mean_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)+
coord_flip()+
labs(title = "Average Homeless Individuals in Yolo County Coc-Age Group",
x= "Age Group",
y= "Average Individuals that Received Care")
library(shiny)
ui <- fluidPage(
titlePanel("Age Group by Total Homeless Count Compared by County"),
selectInput("Age","Select Age Group", choices = c("<18","18-24","25-34","35-44","45-54","55-64",">65"),
selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count","Average Count"),
selected = "Total Count"),
selectInput("County", "Select County", choices = unique(app$LOCATION)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
filtered_data <- reactive({
filtered <- app %>%
mutate(CALENDAR_YEAR=as.factor(CALENDAR_YEAR)) %>%
filter(LOCATION == input$County) %>%
filter(age_group == input$age_group) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
if (input$Statistics == "Total Count") {
filtered <- filtered %>%
summarise(total_homeless = sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
} else {
filtered <- filtered %>%
summarise(average_homeless = mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
}
filtered
})
output$plot <- renderPlot({
ggplot(filtered_data(), aes(x=age_group, y= ifelse(input$Statistics == "Total Count", total_homeless, average_homeless)))+
geom_col(color="black", fill="lightblue", alpha=0.75)
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Age Group by Total Homeless Count Compared by County"),
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = unique(app$LOCATION)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
filtered_data <- reactive({
filtered <- app %>%
filter(LOCATION == input$County) %>%
filter(age_group == input$Age) %>%
summarise(total_homeless = sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless = mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
if (input$Statistics == "Total Count") {
filtered <- filtered %>%
select(total_homeless)
} else {
filtered <- filtered %>%
select(average_homeless)
}
filtered
})
output$plot <- renderPlot({
ggplot(filtered_data(), aes(x = input$Age, y = ifelse(input$Statistics == "Total Count", total_homeless, average_homeless))) +
geom_col(color = "black", fill = "lightblue", alpha = 0.75) +
labs(title = "Total Homelessness by Age Group",
x = "Age Group",
y = ifelse(input$Statistics == "Total Count", "Total Count", "Average Count"))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader("Age Group by Total Homeless Count Compared by County"),
dashboardSidebar(
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = unique(app$LOCATION))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12))
)
)
ui <- dashboardPage(
dashboardHeader("Age Group by Total Homeless Count Compared by County"),
dashboardSidebar(
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = unique(app$LOCATION))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12))
)
)
ui <- dashboardPage(
dashboardHeader("Age Group by Total Homeless Count Compared by County"),
dashboardSidebar(
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = unique(app$LOCATION))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12))
)
)
ui <- dashboardPage(
dashboardHeader(title = "Age Group by Total Homeless Count Compared by County"),
dashboardSidebar(
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = NULL)  # Empty choices initially
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12))
)
)
server <- function(input, output, session) {
filtered_data <- reactive({
filtered <- app %>%
filter(LOCATION == input$County) %>%
filter(age_group == input$Age) %>%
summarise(total_homeless = sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless = mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
filtered
})
observe({
# Update county choices based on selected age group
updateSelectInput(session, "County", choices = unique(app$LOCATION))
})
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = CALENDAR_YEAR, y = if (input$Statistics == "Total Count") total_homeless else average_homeless)) +
geom_col(color = "black", fill = "lightblue", alpha = 0.75) +
labs(title = paste(input$Statistics, "for", input$Age, "in", input$County),
x = "Year",
y = input$Statistics)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Age Group by Total Homeless Count Compared by County"),
dashboardSidebar(
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = NULL)  # Empty choices initially
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12))
)
)
server <- function(input, output, session) {
filtered_data <- reactive({
filtered <- app %>%
filter(LOCATION == input$County) %>%
filter(age_group == input$Age) %>%
summarise(CALENDAR_YEAR = CALENDAR_YEAR,
total_homeless = sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless = mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
filtered
})
observe({
# Update county choices based on selected age group
updateSelectInput(session, "County", choices = unique(app$LOCATION))
})
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = CALENDAR_YEAR, y = if (input$Statistics == "Total Count") total_homeless else average_homeless)) +
geom_col(color = "black", fill = "lightblue", alpha = 0.75) +
labs(title = paste(input$Statistics, "for", input$Age, "in", input$County),
x = "Year",
y = input$Statistics)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Age Group by Total Homeless Count Compared by County"),
dashboardSidebar(
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = NULL)  # Empty choices initially
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12))
)
)
server <- function(input, output, session) {
filtered_data <- reactive({
filtered <- app %>%
filter(LOCATION == input$County) %>%
filter(age_group == input$Age) %>%
summarise(CALENDAR_YEAR = CALENDAR_YEAR,
total_homeless = sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless = mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
filtered
})
observe({
# Update county choices based on selected age group
updateSelectInput(session, "County", choices = unique(app$LOCATION))
})
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = CALENDAR_YEAR, y = if (input$Statistics == "Total Count") total_homeless else average_homeless)) +
geom_col(color = "black", fill = "lightblue", alpha = 0.75) +
labs(title = paste(input$Statistics, "for", input$Age, "in", input$County),
x = "Year",
y = input$Statistics)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Age Group by Total Homeless Count Compared by County"),
dashboardSidebar(
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = NULL)  # Empty choices initially
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12))
)
)
server <- function(input, output, session) {
filtered_data <- reactive({
filtered <- app %>%
filter(LOCATION == input$County) %>%
filter(age_group == input$Age) %>%
summarise(CALENDAR_YEAR = CALENDAR_YEAR,
total_homeless = sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless = mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
filtered
})
observe({
# Update county choices based on selected age group
updateSelectInput(session, "County", choices = unique(app$LOCATION))
})
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = CALENDAR_YEAR, y = if (input$Statistics == "Total Count") total_homeless else average_homeless)) +
geom_col(color = "black", fill = "lightblue", alpha = 0.75) +
labs(title = paste(input$Statistics, "for", input$Age, "in", input$County),
x = "Year",
y = input$Statistics)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Age Group by Total Homeless Count Compared by County"),
dashboardSidebar(
selectInput("Age", "Select Age Group", choices = c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", ">65"), selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count", "Average Count"), selected = "Total Count"),
selectInput("County", "Select County", choices = NULL)  # Empty choices initially
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12))
)
)
server <- function(input, output, session) {
filtered_data <- reactive({
filtered <- app %>%
filter(LOCATION == input$County) %>%
filter(age_group == input$Age) %>%
summarise(CALENDAR_YEAR = CALENDAR_YEAR,
total_homeless = sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless = mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
filtered
})
observe({
# Update county choices based on selected age group
updateSelectInput(session, "County", choices = unique(app$LOCATION))
})
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = CALENDAR_YEAR, y = if (input$Statistics == "Total Count") total_homeless else average_homeless)) +
geom_col(color = "black", fill = "lightblue", alpha = 0.75) +
labs(title = paste(input$Statistics, "for", input$Age, "in", input$County),
x = "Year",
y = input$Statistics)
})
}
shinyApp(ui, server)
age
app
app %>%
mutate(CALENDAR_YEAR=as.factor(CALENDAR_YEAR))
app %>%
mutate(CALENDAR_YEAR=as.factor(CALENDAR_YEAR)) %>%
group_by(CALENDAR_YEAR,age_group)
app %>%
mutate(CALENDAR_YEAR=as.factor(CALENDAR_YEAR)) %>%
mutate(Covid = case_when(
CALENDAR_YEAR < "2020" ~ "Pre-Covid",
CALENDAR_YEAR > "2020" ~ "Post-Covid"
))
app %>%
mutate(CALENDAR_YEAR=as.factor(CALENDAR_YEAR)) %>%
mutate(Covid = case_when(
CALENDAR_YEAR < 2020 ~ "Pre-Covid",
CALENDAR_YEAR > 2020 ~ "Post-Covid"
))
app %>%
mutate(CALENDAR_YEAR=as.factor(CALENDAR_YEAR)) %>%
mutate(Covid = case_when(
CALENDAR_YEAR <= 2019 ~ "Pre-Covid",
CALENDAR_YEAR >= 2020 ~ "Post-Covid"
))
app %>%
mutate(CALENDAR_YEAR=as.numeric(CALENDAR_YEAR)) %>%
mutate(Covid = case_when(
CALENDAR_YEAR <= 2019 ~ "Pre-Covid",
CALENDAR_YEAR >= 2020 ~ "Post-Covid"
))
app %>%
mutate(CALENDAR_YEAR=as.numeric(CALENDAR_YEAR)) %>%
mutate(Covid = case_when(
CALENDAR_YEAR <= 2019 ~ "Pre-Covid",
CALENDAR_YEAR >= 2020 ~ "Covid"
))
covid <- app %>%
mutate(CALENDAR_YEAR=as.numeric(CALENDAR_YEAR)) %>%
mutate(Covid = case_when(
CALENDAR_YEAR <= 2019 ~ "Pre-Covid",
CALENDAR_YEAR >= 2020 ~ "Covid"
))
View(covid)
covid %>%
group_by(Covid)
covid %>%
group_by(Covid) %>%
Filter(LOCATION=="Los Angeles County CoC")
covid %>%
group_by(Covid) %>%
filter(LOCATION=="Los Angeles County CoC")
covid %>%
group_by(Covid, age_group) %>%
filter(LOCATION=="Los Angeles County CoC")
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT)
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT)
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT)
covid %>%
View(covid)
covid %>%
group_by(Covid) %>%
filter(LOCATION=="Los Angeles County CoC") %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT)
covid %>%
group_by(Covid) %>%
filter(LOCATION=="Los Angeles County CoC") %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT)
covid %>%
group_by(Covid) %>%
filter(LOCATION=="Los Angeles County CoC") %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT))
covid %>%
group_by(Covid) %>%
filter(LOCATION=="Los Angeles County CoC") %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT)) %>%
ggplot(aes(x=Covid, y=mean_homeless))+
geom_col()
covid %>%
group_by(Covid) %>%
filter(LOCATION=="Los Angeles County CoC") %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT)) %>%
ggplot(aes(x=Covid, y=mean_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)
covid %>%
group_by(Covid) %>%
filter(LOCATION=="Los Angeles County CoC") %>%
summarise(mean_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT)) %>%
ggplot(aes(x=Covid, y=mean_homeless))+
geom_col(color="black", fill="lightblue", alpha=0.75)+
labs(title = "Average Homelessness Before and During COVID-19 in Los Angeles County CoC",
x= "Covid Status",
y= "Average Homelessness")
