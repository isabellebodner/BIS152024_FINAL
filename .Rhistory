summarry(age$AGE_GROUP_PUBLIC)
summary(age$AGE_GROUP_PUBLIC)
summarise(age$AGE_GROUP_PUBLIC)
table(age$AGE_GROUP_PUBLIC)
age_grouped <- age %>%
filter(AGE_GROUP_PUBLIC!="Unkown") %>%
mutate(age_group = case_when(
AGE_GROUP_PUBLIC == "Under 18" ~ "<18",
AGE_GROUP_PUBLIC == "18-24" ~ "18-24",
AGE_GROUP_PUBLIC == "25-34" ~ "25-34",
AGE_GROUP_PUBLIC == "35-44" ~ "35-44",
AGE_GROUP_PUBLIC == "45-54" ~ "45-54",
AGE_GROUP_PUBLIC == "55-64" ~ "55-64",
AGE_GROUP_PUBLIC == "65+" ~ ">65"))
head(age_grouped)
View(age_grouped)
age_grouped <- age %>%
filter(AGE_GROUP_PUBLIC!="Unkown") %>%
mutate(age_group = case_when(
AGE_GROUP_PUBLIC == "Under 18" ~ "<18",
AGE_GROUP_PUBLIC == "18-24" ~ "18-24",
AGE_GROUP_PUBLIC == "25-34" ~ "25-34",
AGE_GROUP_PUBLIC == "35-44" ~ "35-44",
AGE_GROUP_PUBLIC == "45-54" ~ "45-54",
AGE_GROUP_PUBLIC == "55-64" ~ "55-64",
AGE_GROUP_PUBLIC == "65+" ~ ">65")) %>%
filter(age_group!="NA")
head(age_grouped)
View(merged)
merged <- bind_rows(age_grouped, race)
bind <- bind_rows(age_grouped, race)
View(bind)
merged <- merge(age_grouped, race, by = "LOCATION_ID")
View(merged)
bruh <- merge(age_grouped, race, by = "LOCATION_ID")
age_grouped %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
age_grouped %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col()
age_grouped %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=age_group, y=total_homeless, fill=age_group))+
geom_col()
age_grouped %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col(color="magenta". fill="black", alpha=0.5)
age_grouped %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col(color="magenta", fill="black", alpha=0.5)
age_grouped %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col(color="black", fill="magenta", alpha=0.5)
age_grouped %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col(color="black", fill="magenta", alpha=0.5)+
labs(title = "Total Homelessness by Age Group",
x= "Age Group",
y= "Total Count")
age %>%
group_by(CALENDAR_YEAR) %>%
mutate(CALENDAR_YEAR=as.factor(CALENDAR_YEAR)) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=CALENDAR_YEAR, y=total_homeless))+
geom_col(color="black", fill="blue", alpha=0.6)+
labs(title = "Total Homeless Count 2017-2023",
x= "Year",
y= "Total Count")
age_grouped %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
age_grouped %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless))
age_grouped %>%
filter(LOCATION!="California") %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless))
age_grouped %>%
filter(LOCATION!="California") %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col()+
facet_wrap(~LOCATION, scales = "free")
install.packages("shiny")
library(shiny)
install.packages("shinydashboard")
library(shinydashboard)
library(shinydashboard)
age_grouped %>%
filter(LOCATION!="California") %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT),
average_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col()+
facet_wrap(~LOCATION, scales = "free")
age_grouped %>%
filter(LOCATION!="California") %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col()+
facet_wrap(~LOCATION, scales = "free")
=======
library(janitor)
library(ggplot2)
library(shiny)
library(shinydashboard)
install.packages("shinydashboard")
library(tidyverse)
library(dplyr)
library(janitor)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(palmerpenguins)
race_homeless %>%
count(county)
race_homeless %>%
count(location)
race_homeless %>%
group_by(race) %>%
summarize(total_count=sum(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
group_by(race) %>%
summarize(total_count=sum(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA")
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race) %>%
summarize(total_count=sum(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt)) %>%
filter(race=="American Indian, Alaska Native, or Indigenous")
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt)) %>%
filter(race=="American Indian, Alaska Native, or Indigenous") %>%
filter(location=="Alameda County CoC")
race_app <- race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt)) %>%
filter(race=="American Indian, Alaska Native, or Indigenous") %>%
filter(location=="Alameda County CoC")
View(race_app)
race_app <- race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_app <- race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA"|experiencing_homelessness_cnt!="*") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Your Shiny App"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(your_data$race)),
selectInput("location", "Select Location", choices = unique(your_data$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Your Shiny App"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(race_app$race)),
selectInput("location", "Select Location", choices = unique(race_app$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define server
server <- function(input, output) {
# Filter data based on user input
filtered_data <- reactive({
race_app %>%
filter(race == input$race, location == input$location)
})
# Create bar plot
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average)) +
geom_col() +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
})
}
# Run the app
shinyApp(ui, server)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Your Shiny App"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(race_app$race)),
selectInput("location", "Select Location", choices = unique(race_app$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define server
server <- function(input, output) {
# Filter data based on user input
filtered_data <- reactive({
race_app %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
filter(race == input$race, location == input$location)
})
# Create bar plot
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average)) +
geom_col() +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
})
}
# Run the app
shinyApp(ui, server)
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average))+
geom_col(color="black", fill="steelblue", alpha=0.75) +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Your Shiny App"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(race_app$race)),
selectInput("location", "Select Location", choices = unique(race_app$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define server
server <- function(input, output) {
# Filter data based on user input
filtered_data <- reactive({
race_app %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
filter(race == input$race, location == input$location)
})
# Create bar plot
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average))+
geom_col(color="black", fill="steelblue", alpha=0.75) +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
})
}
# Run the app
shinyApp(ui, server)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Location and Race Breakdown 2017-2023"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(race_app$race)),
selectInput("location", "Select Location", choices = unique(race_app$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define server
server <- function(input, output) {
# Filter data based on user input
filtered_data <- reactive({
race_app %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
filter(race == input$race, location == input$location)
})
# Create bar plot
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average))+
geom_col(color="black", fill="steelblue", alpha=0.75) +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
})
}
# Run the app
shinyApp(ui, server)
runApp('race_app.R')
>>>>>>> cffe5e698197b38099b6e20eb2a6d9c3f5fc5c94
knitr::opts_chunk$set(echo = TRUE)
install.packages("shinydashboard")
library(tidyverse)
library(dplyr)
library(naniar)
library(ggplot2)
library(shiny)
library(shinydashboard)
age <- read_csv("age.csv")
race <- read_csv("race.csv")
age %>%
group_by(CALENDAR_YEAR, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless))
age %>%
group_by(LOCATION) %>%
filter(LOCATION!="California") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless))
age %>%
group_by(CALENDAR_YEAR) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless))
age %>%
group_by(CALENDAR_YEAR) %>%
mutate(CALENDAR_YEAR=as.factor(CALENDAR_YEAR)) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=CALENDAR_YEAR, y=total_homeless))+
geom_col(color="black", fill="blue", alpha=0.6)+
labs(title = "Total Homeless Count 2017-2023",
x= "Year",
y= "Total Count")
age_grouped <- age %>%
filter(AGE_GROUP_PUBLIC!="Unkown") %>%
mutate(age_group = case_when(
AGE_GROUP_PUBLIC == "Under 18" ~ "<18",
AGE_GROUP_PUBLIC == "18-24" ~ "18-24",
AGE_GROUP_PUBLIC == "25-34" ~ "25-34",
AGE_GROUP_PUBLIC == "35-44" ~ "35-44",
AGE_GROUP_PUBLIC == "45-54" ~ "45-54",
AGE_GROUP_PUBLIC == "55-64" ~ "55-64",
AGE_GROUP_PUBLIC == "65+" ~ ">65")) %>%
filter(age_group!="NA")
head(age_grouped)
age_grouped %>%
group_by(age_group) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col(color="black", fill="magenta", alpha=0.5)+
labs(title = "Total Homelessness by Age Group",
x= "Age Group",
y= "Total Count")
age_grouped %>%
filter(LOCATION!="California") %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless)) %>%
ggplot(aes(x=age_group, y=total_homeless))+
geom_col()+
facet_wrap(~LOCATION, scales = "free")
library(shiny)
ui <- fluidPage(titlePanel("Age Group by Total Homeless Count Compared by County"),
selectInput("Age","Select Age Group", choices = c("<18","18-24","25-34","35-44","45-54","55-64",">65"),
selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count","Average Count"),
selected = "Total Count"),
selectInput("County", "Select County", choices = unique(age_grouped$LOCATION)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
age_grouped %>%
filter(LOCATION!="California") %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
output$plot <- renderPlot({
ggplot(aes(x=age_group, y=total_homeless))+
geom_col()+
theme_light()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Age Group by Total Homeless Count Compared by County"),
selectInput("Age","Select Age Group", choices = c("<18","18-24","25-34","35-44","45-54","55-64",">65"),
selected = "<18"),
selectInput("Statistics", "Select Total or Mean", choices = c("Total Count","Average Count"),
selected = "Total Count"),
selectInput("County", "Select County", choices = unique(age_grouped$LOCATION)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
age_grouped %>%
filter(LOCATION!="California") %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
output$plot <- renderPlot({
ggplot(aes(x=age_group, y=total_homeless))+
geom_col()+
theme_light()
})
}
shinyApp(ui, server)
app <- age_grouped %>%
filter(LOCATION!="California") %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE))
View(age_grouped)
app <- age_grouped %>%
filter(LOCATION!="California") %>%
group_by(age_group, LOCATION) %>%
mutate(EXPERIENCING_HOMELESSNESS_CNT=as.integer(EXPERIENCING_HOMELESSNESS_CNT)) %>%
summarise(total_homeless=sum(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE),
average_homeless=mean(EXPERIENCING_HOMELESSNESS_CNT, na.rm = TRUE)) %>%
arrange(desc(total_homeless))
