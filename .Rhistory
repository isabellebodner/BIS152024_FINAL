facet_wrap(.~race)
view(race_homeless)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
filter(location=="Alameda"|location=="Alpine, Inyo, Mono Counties CoC"|location=="Amador, Calaveras, Mariposa, Tuolumne Counties CoC"|location=="Butte County CoC"|location=="Colusa, Glenn, Trinity Counties CoC")
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_wrap(.~race)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
filter(location=="Alameda"|location=="Alpine, Inyo, Mono Counties CoC"|location=="Amador, Calaveras, Mariposa, Tuolumne Counties CoC"|location=="Butte County CoC"|location=="Colusa, Glenn, Trinity Counties CoC")
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_wrap(.~race)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
filter(location=="Alameda"|location=="Alpine, Inyo, Mono Counties CoC"|location=="Amador, Calaveras, Mariposa, Tuolumne Counties CoC"|location=="Butte County CoC"|location=="Colusa, Glenn, Trinity Counties CoC") %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_wrap(.~race)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
filter(location=="Alameda"|location=="Alpine, Inyo, Mono Counties CoC"|location=="Amador, Calaveras, Mariposa, Tuolumne Counties CoC"|location=="Butte County CoC"|location=="Colusa, Glenn, Trinity Counties CoC") %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_grid(.~race)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
filter(location=="Alameda"|location=="Alpine, Inyo, Mono Counties CoC"|location=="Amador, Calaveras, Mariposa, Tuolumne Counties CoC"|location=="Butte County CoC"|location=="Colusa, Glenn, Trinity Counties CoC") %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_grid(.~race)+
coord_flip()
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
filter(location=="Alameda"|location=="Alpine, Inyo, Mono Counties CoC"|location=="Amador, Calaveras, Mariposa, Tuolumne Counties CoC"|location=="Butte County CoC"|location=="Colusa, Glenn, Trinity Counties CoC") %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_grid(.~race)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
filter(location=="Alameda"|location=="Alpine, Inyo, Mono Counties CoC"|location=="Amador, Calaveras, Mariposa, Tuolumne Counties CoC"|location=="Butte County CoC"|location=="Colusa, Glenn, Trinity Counties CoC") %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_grid(.~race)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))#the side of .~ changes rows to columns
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
filter(location=="Alameda"|location=="Yolo County Coc"|location=="Amador, Calaveras, Mariposa, Tuolumne Counties CoC"|location=="Butte County CoC"|location=="Colusa, Glenn, Trinity Counties CoC") %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_grid(.~race)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))#the side of .~ changes rows to columns
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(location,race, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location,y=mean_count))+
geom_col()+
facet_grid(.~race)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))#the side of .~ changes rows to columns
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(race, experiencing_homelessness_cnt)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
group_by(location) %>%
select(race, location, experiencing_homelessness_cnt)
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(year=="2023")
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(year=="2023") %>%
group_by(location) %>%
select(race, location, experiencing_homelessness_cnt)
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(year=="2023") %>%
group_by(location) %>%
select(race, location, experiencing_homelessness_cnt)
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
group_by(location) %>%
select(race, location, experiencing_homelessness_cnt)
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
group_by(location) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location, y=mean_count, fill=race))+
geom_c
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location, y=mean_count, fill=race))+
geom_col()
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
filter(location!="Los Angeles County CoC") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location, y=mean_count, fill=race))+
geom_col()
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
filter(location!="Los Angeles County CoC") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location, y=mean_count, fill=race))+
geom_col()+
coord_flip()
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
filter(location!="Los Angeles County CoC") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location, y=mean_count, fill=race))+
geom_col()
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
filter(location!="Los Angeles County CoC") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location, y=mean_count, fill=race))+
geom_col()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
race_homeless %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
filter(location!="California") %>%
filter(calendar_year=="2023") %>%
filter(location!="Los Angeles County CoC") %>%
group_by(location, race) %>%
select(race, location, experiencing_homelessness_cnt) %>%
summarize(mean_count=mean(experiencing_homelessness_cnt)) %>%
ggplot(aes(x=location, y=mean_count, fill=race))+
geom_col()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
library(tidyverse)
library(dplyr)
library(janitor)
library(ggplot2)
library(shiny)
library(shinydashboard)
install.packages("shinydashboard")
library(tidyverse)
library(dplyr)
library(janitor)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(palmerpenguins)
race_homeless %>%
count(county)
race_homeless %>%
count(location)
race_homeless %>%
group_by(race) %>%
summarize(total_count=sum(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
group_by(race) %>%
summarize(total_count=sum(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA")
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race) %>%
summarize(total_count=sum(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt)) %>%
filter(race=="American Indian, Alaska Native, or Indigenous")
race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt)) %>%
filter(race=="American Indian, Alaska Native, or Indigenous") %>%
filter(location=="Alameda County CoC")
race_app <- race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt)) %>%
filter(race=="American Indian, Alaska Native, or Indigenous") %>%
filter(location=="Alameda County CoC")
View(race_app)
race_app <- race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
race_app <- race_homeless %>%
mutate(experiencing_homelessness_cnt=as.numeric(experiencing_homelessness_cnt)) %>%
filter(experiencing_homelessness_cnt!="NA"|experiencing_homelessness_cnt!="*") %>%
group_by(race, location, calendar_year) %>%
summarize(total_count=sum(experiencing_homelessness_cnt),
average=mean(experiencing_homelessness_cnt))
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Your Shiny App"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(your_data$race)),
selectInput("location", "Select Location", choices = unique(your_data$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Your Shiny App"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(race_app$race)),
selectInput("location", "Select Location", choices = unique(race_app$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define server
server <- function(input, output) {
# Filter data based on user input
filtered_data <- reactive({
race_app %>%
filter(race == input$race, location == input$location)
})
# Create bar plot
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average)) +
geom_col() +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
})
}
# Run the app
shinyApp(ui, server)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Your Shiny App"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(race_app$race)),
selectInput("location", "Select Location", choices = unique(race_app$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define server
server <- function(input, output) {
# Filter data based on user input
filtered_data <- reactive({
race_app %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
filter(race == input$race, location == input$location)
})
# Create bar plot
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average)) +
geom_col() +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
})
}
# Run the app
shinyApp(ui, server)
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average))+
geom_col(color="black", fill="steelblue", alpha=0.75) +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Your Shiny App"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(race_app$race)),
selectInput("location", "Select Location", choices = unique(race_app$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define server
server <- function(input, output) {
# Filter data based on user input
filtered_data <- reactive({
race_app %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
filter(race == input$race, location == input$location)
})
# Create bar plot
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average))+
geom_col(color="black", fill="steelblue", alpha=0.75) +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
})
}
# Run the app
shinyApp(ui, server)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "Location and Race Breakdown 2017-2023"),
dashboardSidebar(
selectInput("race", "Select Race", choices = unique(race_app$race)),
selectInput("location", "Select Location", choices = unique(race_app$location)),
selectInput("y_axis", "Select Y-axis", choices = c("Total Count", "Average"))
),
dashboardBody(
fluidRow(
box(plotOutput("barPlot"), width = 12)
)
)
)
# Define server
server <- function(input, output) {
# Filter data based on user input
filtered_data <- reactive({
race_app %>%
mutate(calendar_year=as.factor(calendar_year)) %>%
filter(race == input$race, location == input$location)
})
# Create bar plot
output$barPlot <- renderPlot({
ggplot(filtered_data(), aes(x = calendar_year, y = if (input$y_axis == "Total Count") total_count else average))+
geom_col(color="black", fill="steelblue", alpha=0.75) +
labs(title = paste(input$y_axis, "for", input$race, "in", input$location),
x = "Year",
y = input$y_axis)
})
}
# Run the app
shinyApp(ui, server)
runApp('race_app.R')
